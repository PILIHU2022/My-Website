<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Spark&#39;s Blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Spark&#39;s Blog</description>
    <generator>Hugo -- 0.148.1</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 02 Oct 2024 15:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Neovim使用`conform.nvim`或`none-ls.nvim`实现格式化代码</title>
      <link>http://localhost:1313/posts/neovim_cmp_other-fmt/</link>
      <pubDate>Wed, 02 Oct 2024 15:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/neovim_cmp_other-fmt/</guid>
      <description>&lt;h1 id=&#34;该配置由chatgpt完成经笔者修改测试后完全可用注释可以不看&#34;&gt;该配置由ChatGPT完成，经笔者修改测试后完全可用(注释可以不看)&lt;/h1&gt;
&lt;h1 id=&#34;conformnvim&#34;&gt;&lt;code&gt;Conform.nvim&lt;/code&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Lightweight yet powerful formatter plugin for Neovim
(轻量但强大的Neovim代码格式化插件)
—— &lt;a href=&#34;https://github.com/stevearc/conform.nvim&#34;&gt;GitHub描述&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;开始使用&#34;&gt;开始使用&lt;/h2&gt;
&lt;p&gt;首先，先安装&lt;code&gt;conform.nvim&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stevearc/conform.nvim&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;-- 安装插件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- 配置conform，使用black和isort格式化Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;conform&amp;#34;&lt;/span&gt;).setup({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                formatters_by_ft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;-- python = { &amp;#34;black&amp;#34; },&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    python &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    lua &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lua-ls&amp;#39;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- 自动格式化配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- vim.api.nvim_create_autocmd(&amp;#34;BufWritePre&amp;#34;, {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--     pattern = &amp;#34;*.py&amp;#34;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--     callback = function(args)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--         require(&amp;#34;conform&amp;#34;).format({ bufnr = args.buf })&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--     end,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- })&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存，重新进入Neovim就可以看见&lt;code&gt;lazy.nvim&lt;/code&gt;正在安装了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Neovim使用ruff格式化Python代码</title>
      <link>http://localhost:1313/posts/neovim_cmp_ruff_fmt/</link>
      <pubDate>Tue, 01 Oct 2024 19:51:57 +0000</pubDate>
      <guid>http://localhost:1313/posts/neovim_cmp_ruff_fmt/</guid>
      <description>&lt;h1 id=&#34;在neovim中使用ruff来格式化python代码&#34;&gt;在Neovim中使用&lt;code&gt;ruff&lt;/code&gt;来格式化Python代码&lt;/h1&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;笔者尝试过使用&lt;code&gt;cmp&lt;/code&gt;调用&lt;code&gt;black&lt;/code&gt;和&lt;code&gt;flake8&lt;/code&gt;来实现格式化Python代码&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;但是失败了，因为两个工具都不支持使用LSP协议（大概吧？）&lt;/p&gt;
&lt;p&gt;有人介绍笔者使用&lt;code&gt;conform.nvim&lt;/code&gt;或&lt;code&gt;none-ls.nvim&lt;/code&gt;来实现，但是笔者都不成功 :joy:&lt;/p&gt;
&lt;p&gt;&lt;del&gt;如果你成功使用&lt;code&gt;conform.nvim&lt;/code&gt;或&lt;code&gt;none-ls.nvim&lt;/code&gt;来实现，欢迎&lt;a href=&#34;mailto:Spark@outlook.com&#34;&gt;告诉笔者！&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;关于ruff&#34;&gt;关于&lt;code&gt;ruff&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;An extremely fast Python linter and code formatter, written in Rust.
(一个用 Rust 编写的极快的 Python linter 和代码格式化程序。)
——ruff项目介绍&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;安装使用&#34;&gt;安装使用&lt;/h2&gt;
&lt;p&gt;我安装时的&lt;a href=&#34;https://github.com/PILIHU2022/My-dotfiles/commit/7e2135f9b059dd272dbeacd8e84e5c60cee1604a&#34;&gt;commit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;其实你只需要在系统装安装&lt;code&gt;ruff&lt;/code&gt;就可以了&lt;/del&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Arch Linux:
sudo pacman -S ruff
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后在&lt;code&gt;cmp.lua&lt;/code&gt;中的&lt;code&gt;servers&lt;/code&gt;中添加&lt;code&gt;ruff = {},&lt;/code&gt;即可&lt;/p&gt;
&lt;h1 id=&#34;完成&#34;&gt;完成&lt;/h1&gt;
&lt;p&gt;&lt;del&gt;又水一篇文章&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用rclone挂载OneDrive</title>
      <link>http://localhost:1313/posts/rclone-mount-onedrive/</link>
      <pubDate>Sun, 01 Sep 2024 08:58:42 +0000</pubDate>
      <guid>http://localhost:1313/posts/rclone-mount-onedrive/</guid>
      <description>&lt;h1 id=&#34;使用rclone挂载onedrive&#34;&gt;使用&lt;code&gt;Rclone&lt;/code&gt;挂载OneDrive&lt;/h1&gt;
&lt;p&gt;数据是无价的，它是你的互联网资产，丢失了就很难找回来。目前人们推荐使用3-2-1的备份模式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;3-2-1备份模式：
3：一堆数据有总共三份，一份在工作目录上，另两份作为备份
2：数据应该至少有两种形式，如硬盘与云存储（上个世纪可能是磁带）
1：三份数据中的一份应该在异地（如在云上，或在家里）

# 链接(URL)：https://chariri.moe/archives/122/personal-backup-restic-rclone/#toc-head-7
# 来源(Source)：茶栗栗屋
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;准备工作&#34;&gt;准备工作&lt;/h1&gt;
&lt;h2 id=&#34;onedrive账号&#34;&gt;OneDrive账号&lt;/h2&gt;
&lt;p&gt;首先你需要有一个OneDrive账号。当然，容量越大越好（例如E5账号）。如果你不需要备份很大的文件的话，普通个人账号的免费版就够了。且服务器在国外，上传速度不理想。&lt;/p&gt;
&lt;h2 id=&#34;安装rclone&#34;&gt;安装&lt;code&gt;Rclone&lt;/code&gt;&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S rclone
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;授权登录&#34;&gt;授权（登录）&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rclone config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后输入&lt;code&gt;n&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Enter name for new remote.
name&amp;gt; &amp;lt;Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在&lt;code&gt;&amp;lt;Name&amp;gt;&lt;/code&gt;处输入你想要的名称（建议不包含空格）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Storage&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入&lt;code&gt;33&lt;/code&gt;并回车。
在要求输入&lt;code&gt;client_id&amp;gt;&lt;/code&gt;和&lt;code&gt;client_secret&amp;gt;&lt;/code&gt;时，直接回车使用默认值即可。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;region&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;回车或输入&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Edit advanced config?
y) Yes
n) No (default)
y/n&amp;gt; n
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Use web browser to automatically authenticate rclone with remote?
 * Say Y if the machine running rclone has a web browser you can use
 * Say N if running rclone on a (remote) machine without web browser access
If not sure try Y. If Y failed, try N.

y) Yes (default)
n) No
y/n&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入&lt;code&gt;y&lt;/code&gt;来使用浏览器登录并且自动授权&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux下设置xdg-open打开某文件/目录的应用程序</title>
      <link>http://localhost:1313/posts/linux-set-default-application/</link>
      <pubDate>Tue, 20 Aug 2024 11:55:17 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux-set-default-application/</guid>
      <description>&lt;h1 id=&#34;设置xdg-open打开某文件目录的默认应用程序&#34;&gt;设置&lt;code&gt;xdg-open&lt;/code&gt;打开某文件/目录的默认应用程序&lt;/h1&gt;
&lt;p&gt;你需要使用&lt;code&gt;xdg-mime&lt;/code&gt;工具来获取&lt;code&gt;filetype&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;xdg-mime query filetype path_to_file
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你需要在&lt;code&gt;/usr/share/applications&lt;/code&gt;中查找有没有你想打开的软件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ls /usr/share/applications | grep program_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;确认后，即可设置默认的打开程序&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;xdg-mime default program_name.desktop filetype
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://man.archlinux.org/man/xdg-mime.1.en&#34;&gt;xdg-mime Arch man&lt;/a&gt;
&lt;a href=&#34;https://man.archlinux.org/man/xdg-open.1.en&#34;&gt;xdg-open Arch man&lt;/a&gt;
&lt;a href=&#34;https://man.archlinux.org/man/xdg-settings.1.en&#34;&gt;xdg-settings Arch man&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>设置Hyprland全局黑暗模式</title>
      <link>http://localhost:1313/posts/set-global-dark-mode-for-hyprland/</link>
      <pubDate>Wed, 14 Aug 2024 19:17:15 +0000</pubDate>
      <guid>http://localhost:1313/posts/set-global-dark-mode-for-hyprland/</guid>
      <description>&lt;h1 id=&#34;在hyprland中设置全局黑暗模式&#34;&gt;在Hyprland中设置全局黑暗模式&lt;/h1&gt;
&lt;h1 id=&#34;折腾部分&#34;&gt;折腾部分&lt;/h1&gt;
&lt;h2 id=&#34;安装有关软件&#34;&gt;安装有关软件！！&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S kvantum nwg-look qt6ct
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;aur解君愁&#34;&gt;AUR解君愁&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;paru -S catppuccin-gtk-theme-mocha
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;qt&#34;&gt;Qt&lt;/h2&gt;
&lt;p&gt;首先，将&lt;a href=&#34;https://github.com/catppuccin/Kvantum&#34;&gt;主题&lt;/a&gt;克隆到本地&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/catppuccin/Kvantum.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后打开&lt;code&gt;kvantum&lt;/code&gt;，安装&lt;a href=&#34;https://github.com/catppuccin/Kvantum&#34;&gt;主题&lt;/a&gt;。（可能是选择整个目录，&lt;del&gt;自己试试&lt;/del&gt;）
&lt;img alt=&#34;Kvantum1&#34; loading=&#34;lazy&#34; src=&#34;https://s1.imagehub.cc/images/2024/08/11/51e1170bb44cf152f1929de9a3cf64fd.png&#34;&gt;
打开&lt;code&gt;qt6ct&lt;/code&gt;，在&lt;code&gt;style&lt;/code&gt;栏中选择&lt;code&gt;kvantum-dark&lt;/code&gt;，点击右下角的确定。
&lt;img alt=&#34;Qt6设置&#34; loading=&#34;lazy&#34; src=&#34;https://s1.imagehub.cc/images/2024/08/11/9a4a1d1cdf7ccc0d2607f56f2dcf674f.png&#34;&gt;
在&lt;code&gt;kvantum&lt;/code&gt;中点击&lt;code&gt;变更/删除主题&lt;/code&gt;，点击右边的小箭头，选择心仪的主题，随后点击&lt;code&gt;应用此主题&lt;/code&gt;，再点击右下角的退出&lt;br&gt;
&lt;img alt=&#34;Kvantum2&#34; loading=&#34;lazy&#34; src=&#34;https://s1.imagehub.cc/images/2024/08/11/f15969e8f613ed1435f77b4883c2c017.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;gtk&#34;&gt;GTK&lt;/h2&gt;
&lt;p&gt;打开&lt;code&gt;nwg-look&lt;/code&gt;，在侧边栏选择好你心仪的主题（建议和&lt;code&gt;kvantum&lt;/code&gt;所选的主题一样，避免出现差异）。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;你只需要在Hyprland的配置文件中添加&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# change to qt6ct if you have that
env = QT_QPA_PLATFORMTHEME,qt6ct

# Set dark theme for GTK apps
exec = gsettings set org.gnome.desktop.interface gtk-theme &amp;#34;&amp;lt;Theme-Name&amp;gt;&amp;#34;   # for GTK3 apps
exec = gsettings set org.gnome.desktop.interface color-scheme &amp;#34;prefer-Dark&amp;#34;   # for GTK4 apps
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;关于查看theme-name&#34;&gt;关于查看&lt;code&gt;Theme-Name&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;以上面的&lt;code&gt;catppuccin-gtk-theme-mocha&lt;/code&gt;为例&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -Ql catppuccin-gtk-theme-mocha | grep &amp;lt;你挑选好的主题名称（在`nwg-look`中查看，仅需`mocha-颜色`）&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后将&lt;code&gt;/usr/share/themes/catppuccin-mocha-*-standard+default/gtk-4.0/assets/scale-vert-marks-before-slider-dark@2.svg&lt;/code&gt;中的&lt;code&gt;catppuccin-mocha-*-standard+default&lt;/code&gt;复制下来，填充到上面的&lt;code&gt;&amp;lt;Theme-Name&amp;gt;&lt;/code&gt;中&lt;/p&gt;</description>
    </item>
    <item>
      <title>在GitHub中使用GPG验证提交</title>
      <link>http://localhost:1313/posts/use_gpg_to_verify_in_github/</link>
      <pubDate>Tue, 23 Jul 2024 16:30:01 +0000</pubDate>
      <guid>http://localhost:1313/posts/use_gpg_to_verify_in_github/</guid>
      <description>&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;
&lt;p&gt;首先，你需要知道，GitHub是有GitHub Docs的。&lt;a href=&#34;https://docs.github.com/zh&#34;&gt;传送门&lt;/a&gt;&lt;br&gt;
本文所提及的在GitHub Docs中也有。&lt;a href=&#34;https://docs.github.com/zh/authentication/managing-commit-signature-verification/about-commit-signature-verification&#34;&gt;传送&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;关于提交验证&#34;&gt;关于提交验证&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;您可以在本地签署提交和标签，让其他人对您所做更改的源充满信心。
对于大多数个人用户，GPG 或 SSH 会是对提交进行签名的最佳选择。
生成 GPG 签名密钥比生成 SSH 密钥更复杂，但 GPG 具有 SSH 所没有的功能。 GPG 密钥可以在不再使用时过期或撤销。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;开始操作&#34;&gt;开始操作&lt;/h1&gt;
&lt;h2 id=&#34;安装gnupg&#34;&gt;安装&lt;code&gt;gnupg&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;其实默认就安装了&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;生成密钥&#34;&gt;生成密钥&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gpg --full-generate-key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果使用默认值，请连续按两次回车键
若想自定义，选择序号，第9是默认项&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Please select what kind of key you want:
   (1) RSA and RSA
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
   (9) ECC (sign and encrypt) *default*
  (10) ECC (sign only)
  (14) Existing key from card
Your selection?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;选择密钥的过期时间（默认选择0，表示永不过期）：&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用Hugo搭建Blog&#43;Cloudflare Pages实现自动部署</title>
      <link>http://localhost:1313/posts/hugo-blog-cloudflare/</link>
      <pubDate>Fri, 19 Jul 2024 05:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hugo-blog-cloudflare/</guid>
      <description>&lt;h1 id=&#34;hugo介绍&#34;&gt;Hugo介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo是世界上最快的构建网页的框架&lt;br&gt;
——&lt;a href=&#34;https://gohugo.io/&#34;&gt; Hugo官网 &lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h1&gt;
&lt;p&gt;Arch Linux：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其余发行版请自行使用包管理器搜索并安装&lt;/p&gt;
&lt;h1 id=&#34;开始使用&#34;&gt;开始使用&lt;/h1&gt;
&lt;p&gt;首先创建一个空白网站&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new site &amp;lt;Site_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个操作会创建一个文件夹，包含Hugo的默认文件&lt;/p&gt;
&lt;h2 id=&#34;安装主题&#34;&gt;安装主题&lt;/h2&gt;
&lt;h3 id=&#34;博客是写给自己看的&#34;&gt;&lt;del&gt;博客是写给自己看的&lt;/del&gt;&lt;/h3&gt;
&lt;p&gt;所以挑选一个自己心仪的主题很重要。&lt;br&gt;
你可以在Hugo的&lt;a href=&#34;https://themes.gohugo.io&#34;&gt;主题网站&lt;/a&gt;中查找
建议查找更新日期较近的主题，以避免有废弃的主题（可能失去了作者支持）。当然，只要你喜欢就好:)
然后你可以点击&lt;code&gt;Download&lt;/code&gt;按钮，以跳转至GitHub页面，查看&lt;code&gt;README.md&lt;/code&gt;以安装主题。&lt;/p&gt;
&lt;h3 id=&#34;这里以fixit主题为例&#34;&gt;这里以&lt;code&gt;FixIt&lt;/code&gt;主题为例&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://fixit.lruihao.cn/zh-cn/&#34;&gt;FixIt主题网站&lt;/a&gt;，你可以查看文档&lt;br&gt;
转至&lt;a href=&#34;https://github.com/hugo-fixit/FixIt&#34;&gt;GitHub页面&lt;/a&gt;，你可以提出issue和pull request以解决问题和完善文档\&lt;/p&gt;
&lt;h4 id=&#34;安装主题-1&#34;&gt;安装主题&lt;/h4&gt;
&lt;p&gt;切换到博客目录，执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来初始化一个空的Git存储库（之后用于GitHub Actions自动构建部署网站）
将[FixIt]主题作为Git子模块添加到你的项目中的&lt;code&gt;themes&lt;/code&gt;目录。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;备份目录中的&lt;code&gt;hugo.toml&lt;/code&gt;文件，并将主题中的&lt;code&gt;hugo.toml&lt;/code&gt;文件复制出来&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mv hugo.toml hugo.toml.back &amp;amp;&amp;amp; cp /themes/FixIt/hugo.toml ./
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在站点配置文件中添加一行，指定当前主题。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;theme = &amp;#39;FixIt&amp;#39;&amp;#34; &amp;gt;&amp;gt; hugo.toml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在站点配置文件中添加一行，指定默认的内容语言。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;defaultContentLanguage = &amp;#39;zh-cn&amp;#39;&amp;#34; &amp;gt;&amp;gt; hugo.toml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后启动Hugo开发服务器以查看站点&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;del&gt;Hugo，启动！&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;写文章&#34;&gt;写文章&lt;/h2&gt;
&lt;p&gt;你需要将Markdown文章放入&lt;code&gt;content/posts&lt;/code&gt;文件夹中，然后执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来构建网站
这并不会在本地启动开发服务器，而是将构建后的网页文件放在&lt;code&gt;public&lt;/code&gt;文件夹下&lt;/p&gt;
&lt;h3 id=&#34;使用草稿&#34;&gt;使用草稿&lt;/h3&gt;
&lt;p&gt;在Hugo中，你可以使用&lt;code&gt;draft&lt;/code&gt;参数来表示该文章是草稿&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: 我的第一篇文章
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2024-03-01T17:10:04+08:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若想连草稿一起构建，请执行&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用Hugo搭建Blog&#43;GitHub Actions实现自动部署</title>
      <link>http://localhost:1313/posts/hugo-blog-github/</link>
      <pubDate>Thu, 18 Jul 2024 12:00:59 +0000</pubDate>
      <guid>http://localhost:1313/posts/hugo-blog-github/</guid>
      <description>&lt;h1 id=&#34;hugo介绍&#34;&gt;Hugo介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo是世界上最快的构建网页的框架&lt;br&gt;
——&lt;a href=&#34;https://gohugo.io/&#34;&gt; Hugo官网 &lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h1&gt;
&lt;p&gt;Arch Linux：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其余发行版请自行使用包管理器搜索并安装&lt;/p&gt;
&lt;h1 id=&#34;开始使用&#34;&gt;开始使用&lt;/h1&gt;
&lt;p&gt;首先创建一个空白网站&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new site &amp;lt;Site_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个操作会创建一个文件夹，包含Hugo的默认文件&lt;/p&gt;
&lt;h2 id=&#34;安装主题&#34;&gt;安装主题&lt;/h2&gt;
&lt;h3 id=&#34;博客是写给自己看的&#34;&gt;&lt;del&gt;博客是写给自己看的&lt;/del&gt;&lt;/h3&gt;
&lt;p&gt;所以挑选一个自己心仪的主题很重要。&lt;br&gt;
你可以在Hugo的&lt;a href=&#34;https://themes.gohugo.io&#34;&gt;主题网站&lt;/a&gt;中查找
建议查找更新日期较近的主题，以避免有废弃的主题（可能失去了作者支持）。当然，只要你喜欢就好:)
然后你可以点击&lt;code&gt;Download&lt;/code&gt;按钮，以跳转至GitHub页面，查看&lt;code&gt;README.md&lt;/code&gt;以安装主题。&lt;/p&gt;
&lt;h3 id=&#34;这里以fixit主题为例&#34;&gt;这里以&lt;code&gt;FixIt&lt;/code&gt;主题为例&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://fixit.lruihao.cn/zh-cn/&#34;&gt;FixIt主题网站&lt;/a&gt;，你可以查看文档&lt;br&gt;
转至&lt;a href=&#34;https://github.com/hugo-fixit/FixIt&#34;&gt;GitHub页面&lt;/a&gt;，你可以提出issue和pull request以解决问题和完善文档\&lt;/p&gt;
&lt;h4 id=&#34;安装主题-1&#34;&gt;安装主题&lt;/h4&gt;
&lt;p&gt;切换到博客目录，执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来初始化一个空的Git存储库（之后用于GitHub Actions自动构建部署网站）
将[FixIt]主题作为Git子模块添加到你的项目中的&lt;code&gt;themes&lt;/code&gt;目录。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;备份目录中的&lt;code&gt;hugo.toml&lt;/code&gt;文件，并将主题中的&lt;code&gt;hugo.toml&lt;/code&gt;文件复制出来&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mv hugo.toml hugo.toml.back &amp;amp;&amp;amp; cp /themes/FixIt/hugo.toml ./
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在站点配置文件中添加一行，指定当前主题。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;theme = &amp;#39;FixIt&amp;#39;&amp;#34; &amp;gt;&amp;gt; hugo.toml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在站点配置文件中添加一行，指定默认的内容语言。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;defaultContentLanguage = &amp;#39;zh-cn&amp;#39;&amp;#34; &amp;gt;&amp;gt; hugo.toml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后启动Hugo开发服务器以查看站点&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;del&gt;Hugo，启动！&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;写文章&#34;&gt;写文章&lt;/h2&gt;
&lt;p&gt;你需要将Markdown文章放入&lt;code&gt;content/posts&lt;/code&gt;文件夹中，然后执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来构建网站
这并不会在本地启动开发服务器，而是将构建后的网页文件放在&lt;code&gt;public&lt;/code&gt;文件夹下&lt;/p&gt;
&lt;h3 id=&#34;使用草稿&#34;&gt;使用草稿&lt;/h3&gt;
&lt;p&gt;在Hugo中，你可以使用&lt;code&gt;draft&lt;/code&gt;参数来表示该文章是草稿&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: 我的第一篇文章
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2024-03-01T17:10:04+08:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若想连草稿一起构建，请执行&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arch Linux自动登录</title>
      <link>http://localhost:1313/posts/auto-login-arch/</link>
      <pubDate>Mon, 12 Feb 2024 22:18:02 +0000</pubDate>
      <guid>http://localhost:1313/posts/auto-login-arch/</guid>
      <description>&lt;h1 id=&#34;arch-linux怎么自动登录而且是免密的应该会有一些人会这样想毕竟如果用户名的密码过长而且密码错以后又要重输想必是让人血压升高的问题今天教程来了&#34;&gt;Arch Linux怎么自动登录，而且是免密的，应该会有一些人会这样想，毕竟如果用户名的密码过长，而且密码错以后又要重输，想必是让人血压升高的问题。今天，教程来了&lt;/h1&gt;
&lt;h1 id=&#34;当然免密登录也会出现一些安全问题&#34;&gt;当然免密登录也会出现一些安全问题&lt;/h1&gt;
&lt;h1 id=&#34;本教程具有一定的时限性具体操作以arch-wiki为准&#34;&gt;本教程具有一定的时限性，具体操作以Arch Wiki为准！&lt;/h1&gt;
&lt;h1 id=&#34;参考arch-wikigetty&#34;&gt;参考Arch Wiki:&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Getty&#34;&gt;Getty&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;开始操作&#34;&gt;开始操作&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S util-linux
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;若已安装可不用重新安装&lt;/p&gt;
&lt;h2 id=&#34;写入一个systemd服务文件&#34;&gt;写入一个systemd服务文件:&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo nvim /etc/systemd/system/getty@tty1.service.d/override.conf
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;若没有getty1serviced文件夹请创建&#34;&gt;若没有&lt;code&gt;getty@1.service.d&lt;/code&gt;文件夹，请创建:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo mkdir /etc/systemd/system/getty@tty1.service.d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将以下代码写入/etc/systemd/system/getty@tty1.service.d/override.conf中:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin username --noclear %I $TERM
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注:这里的username要更改为你的用户名,不能照抄&lt;del&gt;别问我是怎么知道的&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;del&gt;若你不知道你的用户名，请使用以下命令来查看&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;whoami
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;启动该服务&#34;&gt;启动该服务&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo systemctl enable getty@tty1
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;抢救方法如果没有照抄上面的代码可以不看&#34;&gt;抢救方法(如果没有照抄上面的代码,可以不看)&lt;/h1&gt;
&lt;p&gt;我们先解析一下服务文件名,从&amp;quot;getty@tty1&amp;quot;中，我们得知这个服务是针对tty1的，对其他tty不受影响(如tty2)&lt;/p&gt;
&lt;h2 id=&#34;切换到其他tty&#34;&gt;切换到其他tty&lt;/h2&gt;
&lt;p&gt;按住&lt;code&gt;Ctrl+shift+&amp;lt;F2&amp;gt;&lt;/code&gt;切换到tty2，然后登录用户，修改刚刚的配置文件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo nvim /etc/systemd/system/getty@tty1.service.d/override.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后将&lt;code&gt;username&lt;/code&gt;改为你的用户名&lt;/p&gt;
&lt;h1 id=&#34;来看看作者是怎么修的&#34;&gt;&lt;del&gt;来看看作者是怎么修的&lt;/del&gt;&lt;/h1&gt;
&lt;p&gt;重启进入liveCD，挂载Arch Linux所在的硬盘，然后修改配置文件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo vim /mnt/etc/systemd/system/getty@tty1.service.d/override.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将&lt;code&gt;username&lt;/code&gt;修改为我的用户名，重启&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Arch Linux上安装AMD显卡驱动</title>
      <link>http://localhost:1313/posts/install-amd-graphics-on-arch/</link>
      <pubDate>Sat, 27 Jan 2024 20:45:01 +0000</pubDate>
      <guid>http://localhost:1313/posts/install-amd-graphics-on-arch/</guid>
      <description>&lt;h1 id=&#34;设备&#34;&gt;设备:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;显卡：AMD Radeon RX 6500 XT&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参照wiki&#34;&gt;参照Wiki&lt;/h1&gt;
&lt;p&gt;如果动手能力及理解能力比较好的话可以参考ArchWiki：
&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/AMDGPU&#34;&gt;AMDGPU&lt;/a&gt;
&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/ATI&#34;&gt;ATI&lt;/a&gt;
&lt;a href=&#34;https://arch.icekylin.online/guide/rookie/graphic-driver.html#%E7%8B%AC%E7%AB%8B%E6%98%BE%E5%8D%A1&#34;&gt;Arch简明指南-Arch显卡驱动&lt;/a&gt;（不推荐！可能更新不及时，不过你可以参考一下那里的查看显卡架构小结）&lt;/p&gt;
&lt;p&gt;Warning：不要查看野教程！！不要查看野教程！！不要查看野教程！！&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;p&gt;如果你碰巧与我使用的显卡是一样的，&lt;del&gt;很好，你仍可能需要参照Wiki&lt;/del&gt;
&lt;!-- raw HTML omitted --&gt;此处以AMD Radeon RX 6500 XT为例，安装AMDGPU驱动，ATI驱动请自行Google和参照Arch Wiki&lt;!-- raw HTML omitted --&gt;
首先需要安装&lt;code&gt;mesa&lt;/code&gt;包，使用以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S mesa lib32-mesa &lt;span style=&#34;color:#75715e&#34;&gt;# lib32-mesa是对于32位程序，需要开启multilib&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加DDX驱动支持：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S xf86-video-amdgpu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在Wiki上所提到的其他软件，可以按需求安装，但是安装后的&lt;code&gt;llvm&lt;/code&gt;和&lt;code&gt;llvm-libs&lt;/code&gt;是没有&lt;code&gt;-git&lt;/code&gt;结尾，否则，请重新安装&lt;code&gt;llvm&lt;/code&gt;和&lt;code&gt;llvm-libs&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S llvm llvm-libs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果遇到有包依赖，请卸载掉(因为这些包大概都可能是以&lt;code&gt;-git&lt;/code&gt;)结尾的，安装好&lt;code&gt;llvm&lt;/code&gt;和&lt;code&gt;llvm-libs&lt;/code&gt;后再安装回刚刚卸载的包(应该是没有&lt;code&gt;-git&lt;/code&gt;结尾的)&lt;/p&gt;
&lt;h1 id=&#34;以下是我求助的图片及帖文&#34;&gt;以下是我求助的图片及帖文&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bbs.archlinuxcn.org/viewtopic.php?id=14013&#34;&gt;帖文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://s1.imagehub.cc/images/2024/01/26/1853fdbb328161e95bce6608f155e39a.jpeg&#34;&gt;电报中文群组1-图床&lt;/a&gt;
&lt;a href=&#34;https://s1.imagehub.cc/images/2024/01/26/15fadfc09ed8a6f85bb2177d12e7e6a0.png&#34;&gt;电报中文群组2-图床&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pilihu2023-my.sharepoint.com/:i:/g/personal/pilihu_pilihu2023_onmicrosoft_com/EYyv6xJUqHBJnx04Q13hmCQBVg9XeTU1bNJv3iqt06YBOw?e=kYMRs3&#34;&gt;电报中文群组1-OneDrive&lt;/a&gt;
&lt;a href=&#34;https://pilihu2023-my.sharepoint.com/:i:/g/personal/pilihu_pilihu2023_onmicrosoft_com/EQ3LrS0CMz1ApN4tsH4ea6MBKeGqIPw7SC-YS9ycU5-SnQ?e=vBQIed&#34;&gt;电报中文群组2-OneDrive&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arch Linux安装教程(BIOS)</title>
      <link>http://localhost:1313/posts/how-to-install-archbios/</link>
      <pubDate>Tue, 15 Aug 2023 13:18:20 +0000</pubDate>
      <guid>http://localhost:1313/posts/how-to-install-archbios/</guid>
      <description>&lt;h1 id=&#34;本文介绍arch-linux安装以bios方式为例&#34;&gt;本文介绍Arch Linux安装，以BIOS方式为例&lt;/h1&gt;
&lt;h1 id=&#34;本文所输入的命令均可用tab键补全&#34;&gt;&lt;em&gt;本文所输入的命令均可用Tab键补全&lt;/em&gt;&lt;/h1&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;h2 id=&#34;arch-linux官方安装指南&#34;&gt;&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97&#34;&gt;Arch Linux官方安装指南&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;arch-linux镜像下载地址ustc20230701&#34;&gt;&lt;a href=&#34;https://mirrors.ustc.edu.cn/archlinux/iso/2023.07.01/archlinux-2023.07.01-x86_64.iso&#34;&gt;Arch Linux镜像下载地址USTC，2023.07.01&lt;/a&gt;&lt;/h3&gt;
&lt;h1 id=&#34;注意-arch-linux-安装镜像不支持安全启动secure-boot注意-arch-linux-安装镜像不支持安全启动secure-boot详见wiki&#34;&gt;注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97&#34;&gt;注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）,详见wiki&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;前面说了一堆废话现在开始实操&#34;&gt;&lt;del&gt;前面说了一堆废话现在开始实操&lt;/del&gt;&lt;/h1&gt;
&lt;h1 id=&#34;开始安装&#34;&gt;开始安装&lt;/h1&gt;
&lt;p&gt;启动后，先禁用reflector服务&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo systemctl stop reflector
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个服务主要是从Arch Linux Mirror Status 页面获取最新的镜像列表，然后筛选出最新的镜像并按速度排序，最后将结果写入到 /etc/pacman.d/mirrorlist 文件。 &lt;del&gt;但它很鸡肋&lt;/del&gt;，手动添加镜像站会更好
&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Reflector&#34;&gt;更多关于该服务请见Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;添加的镜像站主要是ustc的镜像站或者清华镜像站&#34;&gt;添加的镜像站主要是USTC的镜像站或者清华镜像站&lt;/h4&gt;
&lt;h5 id=&#34;如果不想手动安装arch的话可以使用archinstall&#34;&gt;如果不想手动安装Arch的话可以使用archinstall:&lt;/h5&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;archinstall
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Archinstall&#34;&gt;详见Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;连接网络&#34;&gt;连接网络&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ip link
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;要连接到网络：
有线以太网 —— 连接网线。
WiFi —— 使用 &lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Iwd#iwctl&#34;&gt;iwctl&lt;/a&gt; 验证无线网络。
移动宽带调制解调器（移动网卡） - 使用 &lt;a href=&#34;https://wiki.archlinux.org/title/mmcli&#34;&gt;mmcli&lt;/a&gt; 实用程序连接到移动网络。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;配置网络连接：
&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE#DHCP&#34;&gt;DHCP&lt;/a&gt;：对于有线以太网、无线局域网（WLAN）和无线广域网（WWAN）网络接口来说，动态 IP 地址和 DNS 服务器分配（由 &lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Systemd-networkd&#34;&gt;systemd-networkd&lt;/a&gt; 和 &lt;a href=&#34;https://wiki.archlinux.org/title/systemd-resolved&#34;&gt;systemd-resolved&lt;/a&gt; 提供功能）能够开箱即用。
静态 IP 地址：按照静态 IP 地址进行操作。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;用 &lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE#Ping&#34;&gt;ping&lt;/a&gt; 检查网络连接：&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ping archlinux.org
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;更新系统时间&#34;&gt;更新系统时间&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Live 环境中&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Systemd-timesyncd&#34;&gt;systemd-timesyncd&lt;/a&gt;默认启用，建立互联网连接后，时间将自动同步。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hyprland指南(安装常用软件)</title>
      <link>http://localhost:1313/posts/hyprland-guide-install-useful-programs/</link>
      <pubDate>Tue, 15 Aug 2023 10:06:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hyprland-guide-install-useful-programs/</guid>
      <description>&lt;h1 id=&#34;hyprland指南安装常用软件&#34;&gt;Hyprland指南(安装常用软件)&lt;/h1&gt;
&lt;h2 id=&#34;安装vscode&#34;&gt;安装VScode&lt;/h2&gt;
&lt;p&gt;全称为Visual Studio Code&lt;!-- raw HTML omitted --&gt;AUR&lt;!-- raw HTML omitted --&gt;，由于名字太长所以被人们简化成VSC(吧？)&lt;del&gt;不用管这些，我们只是用这个来码代码(屎山)&lt;/del&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;paru -S visual-studio-code-bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后就跟着VSC的提示来安装中文语言包，装好就不用我说了吧？
如果嫌调字体麻烦的话可以来到&lt;a href=&#34;https://github.com/PILIHU2022/My-Arch-configs&#34;&gt;我的配置仓库&lt;/a&gt;，在里面的settings(VSC).json中，有一个&lt;code&gt;//设置字体&lt;/code&gt;，把里面的内容复制到你的VSC配置文件中，路径如下:
&lt;code&gt;~/.config/code/User/&lt;/code&gt;
字体的话需要安装如下:(自己配置的话可跳过)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;paru -S ttf-cascadia-code nerd-fonts-completle 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;鸿蒙黑体也是可以的，但是在系统上使用似乎会出现有的字体大，有的字体小的问题，我没有进一步研究。
&lt;del&gt;只记得要装这两个，还有些忘了&lt;/del&gt;
微软雅黑的话可以换成别的字体&lt;/p&gt;
&lt;h3 id=&#34;剩下的就自己折腾吧&#34;&gt;剩下的就自己折腾吧&lt;/h3&gt;
&lt;h2 id=&#34;安装qq&#34;&gt;安装QQ&lt;/h2&gt;
&lt;p&gt;这个可没有配置文件照抄了，直接执行：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;paru -S linuxqq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装即可，若出现闪退情况，请参阅
&lt;a href=&#34;https://aur.archlinux.org/packages/linuxqq&#34;&gt;AUR-LinuxQQ评论区&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;markdown编辑软件&#34;&gt;Markdown编辑软件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Typora
&lt;ul&gt;
&lt;li&gt;UI可以，可以实时预览，支持快捷键，但是不支持修改快捷键，Markdown的功能基本都有，就是要￥&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VNote
&lt;ul&gt;
&lt;li&gt;开源，不可以实时预览，支持快捷键，支持修改快捷键，有能力的甚至可以自定义主题以及样式，有待改进&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Marktext
&lt;ul&gt;
&lt;li&gt;在Windows上用过，不过是20年的事，不知道现在咋样了，听说可以实时预览了，有兴趣的可以试试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;下面以安装vnote为例&#34;&gt;下面以安装VNote为例：&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;paru -S vnote-appimage
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在AUR中有一个包名叫做&lt;code&gt;vnote&lt;/code&gt;的,我试过,无法使用中文输入,所以使用&lt;code&gt;vnote-appimage&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;安装typora&#34;&gt;安装Typora&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S Typora
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;del&gt;当然,这是有米的人的操作&lt;/del&gt;&lt;/p&gt;
&lt;h5 id=&#34;想使用破解版的可以添加zzy-ac源有米的人可以跳过&#34;&gt;想使用破解版的可以添加zzy-ac源(&lt;del&gt;有米的人可以跳过&lt;/del&gt;)&lt;/h5&gt;
&lt;p&gt;在/etc/pacman.conf中添加:
`
[zzy-ac]
SigLevel=Never&lt;/p&gt;
&lt;p&gt;Server = &lt;a href=&#34;https://github.com/zzy-ac/repo/releases/download/x86_64/&#34;&gt;https://github.com/zzy-ac/repo/releases/download/x86_64/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Server = &lt;a href=&#34;https://gh.dmnb.cf/https://github.com/zzy-ac/repo/releases/download/x86_64&#34;&gt;https://gh.dmnb.cf/https://github.com/zzy-ac/repo/releases/download/x86_64&lt;/a&gt;
`
安装Typora&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S zzy-ac/typora-electron-crack
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;all-done-enjoy-it&#34;&gt;All done! Enjoy it!&lt;/h1&gt;
&lt;h1 id=&#34;writerpilihu&#34;&gt;Writer:PILIHU&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Hyprland指南(安装其他软件)</title>
      <link>http://localhost:1313/posts/hyprland-guide-install-other-programs/</link>
      <pubDate>Mon, 14 Aug 2023 15:25:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hyprland-guide-install-other-programs/</guid>
      <description>&lt;h1 id=&#34;hyprland指南第二篇&#34;&gt;Hyprland指南(第二篇)&lt;/h1&gt;
&lt;h2 id=&#34;若想使用通知需要安装-dunst&#34;&gt;若想使用通知，需要安装 dunst&lt;/h2&gt;
&lt;p&gt;如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S dunst
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后将本仓库的/dunst 复制到~/.config/dunst 中，若没有该文件夹，则创建一个 dunst 的文件夹，否则 dunst 不会读取并且使用的。
&lt;del&gt;都用 Arch Linux 了，不会连创建文件夹都不会吧？&lt;/del&gt;
&lt;del&gt;为了避免有人不会创建文件夹&lt;/del&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir ~/.config/dunst
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后设置自启动：
在~/.config/hypr/hyprland.conf中添加：
&lt;code&gt;exec-once = dunst&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;若想实现类似于-i3-status-的功能状态栏需要安装-waybar&#34;&gt;若想实现类似于 i3-status 的功能（状态栏），需要安装 waybar&lt;/h2&gt;
&lt;p&gt;如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;paru -S waybar-git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后将本仓库中的/waybar 文件夹复制到~/.config/hypr 中&lt;del&gt;可以新建文件夹，也可以不用&lt;/del&gt;然后记住 waybar 文件夹中的 config.jsonc 和 style.css 路径（完整路径）
设置自启动：
在~/.config/hypr/hyprland.conf 中写入：
&lt;code&gt;exec-once = waybar -c $WAYBAR/config.jsonc -s $WAYBAR/style.css&lt;/code&gt;
&lt;strong&gt;其中的$WAYBAR 为你的 waybar 具体路径&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;若想输入中文你需要安装输入法&#34;&gt;&lt;del&gt;若想输入中文&lt;/del&gt;，你需要安装输入法&lt;/h2&gt;
&lt;h3 id=&#34;若想使用fcitx5的中文输入法非rime&#34;&gt;若想使用fcitx5的中文输入法(非rime)&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S fcitx5-im fcitx5-chinese fcitx5-pinyin-moegirl fcitx5-material-color # 安装输入法相关软件包，词库，主题 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;此处以安装rime输入法为例其他输入法同理不过推荐使用fcitx5&#34;&gt;&lt;em&gt;此处以安装rime输入法为例，其他输入法同理，不过推荐使用fcitx5&lt;/em&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S fcitx5-rime
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;del&gt;我使用的就是rime输入法，不过我感觉输入体验是不如搜狗输入法，将就着用吧&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arch Linux安装教程(以Legacy BIOS为例)</title>
      <link>http://localhost:1313/posts/how-to-install-archbiosxiaoice/</link>
      <pubDate>Fri, 06 Jan 2023 13:30:43 +0000</pubDate>
      <guid>http://localhost:1313/posts/how-to-install-archbiosxiaoice/</guid>
      <description>&lt;h1 id=&#34;arch-linux安装教程-以legacy-bios为例-最后更新于2023年01月06日&#34;&gt;Arch Linux安装教程 （以Legacy BIOS为例） 最后更新于2023年01月06日&lt;/h1&gt;
&lt;h2 id=&#34;1arch-linux--kde-的安装及配置&#34;&gt;1.Arch Linux &amp;amp; KDE 的安装及配置——&lt;/h2&gt;
&lt;h4 id=&#34;零系统镜像的下载--安装介质的制作--bios-的设置&#34;&gt;零、系统镜像的下载 &amp;amp; 安装介质的制作 &amp;amp; BIOS 的设置&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://mirrors.ustc.edu.cn/archlinux/iso/2023.01.01/archlinux-2023.01.01-x86_64.iso&#34;&gt;点击此处下载系统镜像&lt;/a&gt;并&lt;a href=&#34;https://mirrors.ustc.edu.cn/archlinux/iso/2023.01.01/sha256sums.txt&#34;&gt;校验SHA256&lt;/a&gt;镜像的完整性。校验无误后，使用&lt;a href=&#34;https://www.ventoy.net/cn/download.html&#34;&gt;Ventoy&lt;/a&gt;制作安装介质。（如果是首次使用Ventoy，&lt;a href=&#34;https://www.ventoy.net/cn/index.html&#34;&gt;请点击此处&lt;/a&gt;查看使用方法）然后进入BIOS，将安全启动和快速启动关闭并将安装介质（如U盘）设置为第一启动项，并按F10保存退出。进入ArchLinux安装盘即可。&lt;/p&gt;
&lt;h5 id=&#34;如果设备中包含nvidia显卡请在进入livecd的grub引导界面时按下键盘上的字母e进入grub的编辑模式在其linux行的末尾加入nouveaumodeset0来屏蔽nvidia开源驱动否则会出现加载nouveau模块报错和其他模块无法加载的问题编辑完成后按ctrlx退出&#34;&gt;如果设备中包含NVIDIA显卡，请在进入liveCD的GRUB引导界面时按下键盘上的字母E,进入GRUB的编辑模式。在其linux行的末尾加入nouveau.modeset=0来屏蔽NVIDIA开源驱动。否则会出现加载nouveau模块报错和其他模块无法加载的问题。编辑完成后按CTRL+X退出。&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;如有疑问请参考Wiki以下章节：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E8%8E%B7%E5%8F%96%E5%AE%89%E8%A3%85%E6%98%A0%E5%83%8F&#34;&gt;获取安装映像&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%87%86%E5%A4%87%E5%AE%89%E8%A3%85%E6%98%A0%E5%83%8F&#34;&gt;准备安装映像&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8%E5%88%B0_Live_%E7%8E%AF%E5%A2%83&#34;&gt;启动到Live环境&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;一验证引导模式--联网--换源&#34;&gt;一、验证引导模式 &amp;amp; 联网 &amp;amp; 换源：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls /sys/firmware/efi/efivars
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#验证引导模式（如果目录不存在，即为Legacy BIOS引导模式；反之，请使用隔壁以UEFI为例的教程）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ iwctl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#运行iwctl（如果是台式机，可直接跳到ping -c 5 archlinux.org这一步）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;iwctl&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# device list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#列出WiFi设备（一般为wlan0；这里以wlan0为例）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;iwctl&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# station wlan0 scan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#扫描网络&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;iwctl&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# station wlan0 get-networks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#列出可用网络&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;iwctl&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# station wlan0 connect X&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#连接到X（X改成你可用的WiFi名称并在回车后输入密码且确保密码输入正确）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;iwctl&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#退出iwctl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ping -c &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; archlinux.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#检查网络连接（如果有输出内容，即为联网成功）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ reflector --country China --save /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#换源（注意大小写）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ systemctl stop reflector
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#关闭reflector服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#编辑/etc/pacman.d/mirrorlist文件，保留自己需要的源（一般推荐使用中科大源或清华源）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ timedatectl status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#检查服务状态&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如有疑问请参考Wiki以下章节：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
