<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Neovim on Spark&#39;s Blog</title>
    <link>http://localhost:1313/tags/neovim/</link>
    <description>Recent content in Neovim on Spark&#39;s Blog</description>
    <generator>Hugo -- 0.148.1</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 02 Oct 2024 15:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/neovim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Neovim使用`conform.nvim`或`none-ls.nvim`实现格式化代码</title>
      <link>http://localhost:1313/posts/neovim_cmp_other-fmt/</link>
      <pubDate>Wed, 02 Oct 2024 15:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/neovim_cmp_other-fmt/</guid>
      <description>&lt;h1 id=&#34;该配置由chatgpt完成经笔者修改测试后完全可用注释可以不看&#34;&gt;该配置由ChatGPT完成，经笔者修改测试后完全可用(注释可以不看)&lt;/h1&gt;
&lt;h1 id=&#34;conformnvim&#34;&gt;&lt;code&gt;Conform.nvim&lt;/code&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Lightweight yet powerful formatter plugin for Neovim
(轻量但强大的Neovim代码格式化插件)
—— &lt;a href=&#34;https://github.com/stevearc/conform.nvim&#34;&gt;GitHub描述&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;开始使用&#34;&gt;开始使用&lt;/h2&gt;
&lt;p&gt;首先，先安装&lt;code&gt;conform.nvim&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stevearc/conform.nvim&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;-- 安装插件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- 配置conform，使用black和isort格式化Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;conform&amp;#34;&lt;/span&gt;).setup({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                formatters_by_ft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;-- python = { &amp;#34;black&amp;#34; },&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    python &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    lua &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lua-ls&amp;#39;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- 自动格式化配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- vim.api.nvim_create_autocmd(&amp;#34;BufWritePre&amp;#34;, {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--     pattern = &amp;#34;*.py&amp;#34;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--     callback = function(args)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--         require(&amp;#34;conform&amp;#34;).format({ bufnr = args.buf })&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;--     end,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;-- })&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后保存，重新进入Neovim就可以看见&lt;code&gt;lazy.nvim&lt;/code&gt;正在安装了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Neovim使用ruff格式化Python代码</title>
      <link>http://localhost:1313/posts/neovim_cmp_ruff_fmt/</link>
      <pubDate>Tue, 01 Oct 2024 19:51:57 +0000</pubDate>
      <guid>http://localhost:1313/posts/neovim_cmp_ruff_fmt/</guid>
      <description>&lt;h1 id=&#34;在neovim中使用ruff来格式化python代码&#34;&gt;在Neovim中使用&lt;code&gt;ruff&lt;/code&gt;来格式化Python代码&lt;/h1&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;笔者尝试过使用&lt;code&gt;cmp&lt;/code&gt;调用&lt;code&gt;black&lt;/code&gt;和&lt;code&gt;flake8&lt;/code&gt;来实现格式化Python代码&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;但是失败了，因为两个工具都不支持使用LSP协议（大概吧？）&lt;/p&gt;
&lt;p&gt;有人介绍笔者使用&lt;code&gt;conform.nvim&lt;/code&gt;或&lt;code&gt;none-ls.nvim&lt;/code&gt;来实现，但是笔者都不成功 :joy:&lt;/p&gt;
&lt;p&gt;&lt;del&gt;如果你成功使用&lt;code&gt;conform.nvim&lt;/code&gt;或&lt;code&gt;none-ls.nvim&lt;/code&gt;来实现，欢迎&lt;a href=&#34;mailto:Spark@outlook.com&#34;&gt;告诉笔者！&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;关于ruff&#34;&gt;关于&lt;code&gt;ruff&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;An extremely fast Python linter and code formatter, written in Rust.
(一个用 Rust 编写的极快的 Python linter 和代码格式化程序。)
——ruff项目介绍&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;安装使用&#34;&gt;安装使用&lt;/h2&gt;
&lt;p&gt;我安装时的&lt;a href=&#34;https://github.com/PILIHU2022/My-dotfiles/commit/7e2135f9b059dd272dbeacd8e84e5c60cee1604a&#34;&gt;commit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;其实你只需要在系统装安装&lt;code&gt;ruff&lt;/code&gt;就可以了&lt;/del&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Arch Linux:
sudo pacman -S ruff
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后在&lt;code&gt;cmp.lua&lt;/code&gt;中的&lt;code&gt;servers&lt;/code&gt;中添加&lt;code&gt;ruff = {},&lt;/code&gt;即可&lt;/p&gt;
&lt;h1 id=&#34;完成&#34;&gt;完成&lt;/h1&gt;
&lt;p&gt;&lt;del&gt;又水一篇文章&lt;/del&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
